// Kerbal Space Program - Part Config
// made By Roboto
//

PART
{

	// --- general parameters ---
	name = BioMass_Algae_Greenhouse
	module = Part
	author = Roboto
	scale = 1.0

	
	// --- asset parameters ---
	mesh = model.mu

	// --- node definitions ---
	node_stack_top = 0.0, 2.82, 0.0, 0.0, 1.0, 0.0, 2
	node_stack_bottom = 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 2
	node_attach = 1.25, 0.0, 0.0, 1.0, 0.0, 0.0, 1

	// --- editor parameters ---
    //TechRequired = spaceExploration
    TechRequired = bioFuels
    entryCost = 12200
	cost = 3800
	category = none
	subcategory = 0

	title = Greenhouse: Aquatic 

	manufacturer = DG Aero-Space Renewables
	description = After the wild success of the BioMass greenhouse, the management at DG Aero-Space Renewables said, "Can we have one in green? And heavier?" And thus the aquatic greenhouse was born. Cultivates photosynthetic and other complex organisms in a self contained aquatic environment. When filled with water and provided with proper nutrients and sunlight it can be used to produce BioMass, Oxygen, or just to filter the air and provide a relaxing vista for weary Kerbal Space Travelers. Did we mention it's green?

	PhysicsSignificance = 1

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,1,1,1,0

	// --- standard part parameters ---
	mass = 5
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.3
	angularDrag = 2
	crashTolerance = 6
	maxTemp = 2900
	fuelCrossFeed = True


	bulkheadProfiles = size2, srf
	tags = cck-lifesupport


	MODULE
	{
		name = ModuleRequiredExperiment
		requiredExperimentID = BioSystems
		//biomes = one,two,three
		//requiredSitMask = 63
		inCurrentSituation = true
		uniqueBodies = false

		modulesInitiallyDisabled = AnimatedGenerator
	}


	MODULE
	{
		name = ModuleDeployableSolarPanel
		animationName = open
		sunTracking = true
		raycastTransformName = glass
		pivotName = glass
		isBreakable = false
		resourceName = ElectricCharge
		//chargeRate = 0.0005
		chargeRate = 1

		extendActionName = Open
		retractActionName = Close
		extendpanelsActionName = Toggle

		powerCurve
		{
			key = 206000000000 0 0 0
			key = 13599840256 1 0 0
			key = 68773560320 0.5 0 0
			key = 0 10 0 0
		}
	}


	//Onboard modules
	MODULE
	{
		name = AnimatedGenerator
		ConverterName = Artificial Lighting
		AnimationName = spin
		FillAmount = 1.0
		AlwaysActive = false
		StartActionName = Lights On
		StopActionName = Lights Off
		AutoShutdown = true
		GeneratesHeat = true
		UseSpecialistBonus = true
 		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		Specialty = Engineer
		EfficiencyBonus = 1		 


		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 4
		}
		INPUT_RESOURCE
		{
			ResourceName = Sludge
			Ratio =  0.000020833
		}
		// The two output resources need to add up
		// to the input resource here
		OUTPUT_RESOURCE
		{
			ResourceName = LifeSupport
			Ratio =  0.000020833
			DumpExcess = true
		} 
	}
	MODULE
	{
		name = IFI_Advanced
	}
}

