// Kerbal Space Program - Part Config
// made By Roboto
//

PART
{

	// --- general parameters ---
	name = NewBioMass_Expanding_Greenhouse
	module = Part
	author = Roboto
	scale = 1.0

	
	// --- asset parameters ---
	mesh = expandingGreenhouse

	// --- node definitions ---
	node_stack_top = -0.04, 2.3, 0.0, 0.0, 1.0, 0.0, 2
	node_stack_bottom = -0.04, -2.3, 0, 0, -1.0, 0.0, 2
	node_attach = 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1

	// --- editor parameters ---
	//TechRequired = spaceExploration
	TechRequired = sustainability
	entryCost = 12200
	cost = 3800
	category = none
	subcategory = 0

	title = Greenhouse: Expand-o-matic

	manufacturer = DG Aero-Space Renewables
	description = DG Aero-Space hired a dozens of theoretical physicists to try and find a way to get more space into their greenhouses. There was initially great excitement about saying water was 1 unit per liter, but it just led to confusion. In end the manager for the project saw a parachute deploy and resolved to fire the physicists and hire seamstresses. The final design is a greenhouse that triples the interior growing area when the "wings" are deployed.

	PhysicsSignificance = 1

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,1,1,1,0

	// --- standard part parameters ---
	mass = 7
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.3
	angularDrag = 2
	crashTolerance = 6
	breakingForce = 200
	breakingTorque = 200
	maxTemp = 2900
	fuelCrossFeed = True
  
	bulkheadProfiles = size1, srf
	tags = cck-lifesupport

	MODULE
	{
		name = ModuleRequiredExperiment
		requiredExperimentID = PlantRespirationStudy
		//biomes = one,two,three
		//requiredSitMask = 63
		inCurrentSituation = true
		uniqueBodies = false

		modulesInitiallyDisabled = ModuleDeployableSolarPanel, ModuleResourceConverter
	}

  //Onboard modules

	MODULE
	{
		name = ModuleDeployableSolarPanel
		animationName = Deploy
		sunTracking = true
		raycastTransformName = glass
		pivotName = glass
		isBreakable = false
		resourceName = ElectricCharge
		//chargeRate = 0.0005
		chargeRate = 2
	
		powerCurve
		{
			key = 206000000000 0 0 0
			key = 13599840256 1 0 0
			key = 68773560320 0.5 0 0
			key = 0 10 0 0
		}
	}
	

	MODULE
	{
		//name = AnimatedGenerator
		name = ModuleIFILifeSupport
		ConverterName = Expand-o-Matic
		//tag = ArtificialLighting
	//	AnimationName = Deploy
		//FillAmount = 1.0
		requiresAllInputs = true
		AlwaysActive = false
		StartActionName = Turn UV Lights On
		StopActionName = Turn UV Lights Off
		//statusGUIName = UV Lights

		//AutoShutdown = true
		//GeneratesHeat = true
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		Specialty = Engineer
		EfficiencyBonus = 1		



		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 8
		}
		INPUT_RESOURCE
		{
			ResourceName = OrganicSlurry
			Ratio = 0.00013889
		}
		// The two output resources need to add up
		// to the input resource here
		OUTPUT_RESOURCE
		{
			ResourceName = LifeSupport
			Ratio = 0.00012500
			DumpExcess = true
		} 
		OUTPUT_RESOURCE
		{
			ResourceName = Sludge
			Ratio = 0.00001389
			DumpExcess = true
		} 
	}
	
  //-----------onboard resources-------------//
	
	RESOURCE
	{
		name = Sludge
		amount = 0
		maxAmount = 10
	}
	RESOURCE
	{
		name = OrganicSlurry
		amount = 0
		maxAmount = 10
	}
	RESOURCE
	{
		name = LifeSupport
		amount = 0
		maxAmount = 10
	}
	MODULE
	{
		name = IFI_Improved

		ls_maxAmount = 10
		slurry_maxAmount = 10
		sludge_maxAmount = 10
	}
}
